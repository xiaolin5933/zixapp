#!/usr/bin/perl
use strict;
use warnings;

use Zeta::Serializer::JSON;
use Carp;
use constant DEBUG =>  $ENV{ZAPP_DEBUG} || 0;

#
# 加载配置处理器
#
my %proc;
for my $file ( <$ENV{ZIXAPP_HOME}/conf/proc/*.proc> ) {
    warn "begin load proc[$file]" if DEBUG;
    $file =~ /([^\/]+).proc$/;
    $proc{$1} = do $file;
    unless($proc{$1}) {
        confess "can not do file[$file] error[$@]";
    }
}

#
# 加载服务处理器
#
my %svc;
for my $file ( <$ENV{ZIXAPP_HOME}/conf/svc/*.svc> ) {
    warn "begin load service[$file]" if DEBUG;
    $file =~ /([^\/]+).svc$/;
    $svc{$1} = do $file;
    unless($svc{$1}) {
        confess "can not do file[$file] error[$@]";
    }
}

#
# 加载导入凭证处理器
my %load;
for my $file ( <$ENV{ZIXAPP_HOME}/conf/load/*.load> ) {
    warn "begin load loads[$file]" if DEBUG;
    $file =~ /([^\/]+).load$/;
    $load{$1} = do $file;
    unless($load{$1}) {
        confess "can not do file[$file] error[$@]";
    }
}

#
# 返回值
#
{

    # main.pl 配置
    main => {
        port   => 9898,
        module => 'ZAPP::Admin',
        para   => {},
    },

    # 数据库配置 
    db => {
        dsn    => "dbi:DB2:$ENV{DB_NAME}",
        user   => "$ENV{DB_USER}",
        pass   => "$ENV{DB_PASS}",
        schema => "$ENV{DB_SCHEMA}",
    },

    # 消息队列配置
    stomp => {
        hostname => '127.0.0.1',
        port     => '61612',
        queue    => {
           proc  => 'zixapp.proc',
        }
    },

    # 序列化工具
    serializer => Zeta::Serializer::JSON->new(),

    # service 配置
    service => {
        hostname  => '127.0.0.1',
        port      => '7676', 
    },

    # svc 
    svc => \%svc,
   
    # proc
    proc => \%proc,

    # load
    load => \%load,
};

__END__

configuration should be centralized

dev vs conf 

